{"id":"node_modules/mout/object/forOwn.js","dependencies":[{"name":"C:\\Computerwelt\\Web Dev\\viktor website\\package.json","includedInParent":true,"mtime":1649500914480},{"name":"C:\\Computerwelt\\Web Dev\\viktor website\\node_modules\\mout\\package.json","includedInParent":true,"mtime":1396969071000},{"name":"./hasOwn","loc":{"line":1,"column":21},"parent":"C:\\Computerwelt\\Web Dev\\viktor website\\node_modules\\mout\\object\\forOwn.js","resolved":"C:\\Computerwelt\\Web Dev\\viktor website\\node_modules\\mout\\object\\hasOwn.js"},{"name":"./forIn","loc":{"line":2,"column":20},"parent":"C:\\Computerwelt\\Web Dev\\viktor website\\node_modules\\mout\\object\\forOwn.js","resolved":"C:\\Computerwelt\\Web Dev\\viktor website\\node_modules\\mout\\object\\forIn.js"}],"generated":{"js":"var hasOwn = require('./hasOwn');\nvar forIn = require('./forIn');\n\n    /**\n     * Similar to Array/forEach but works over object properties and fixes Don't\n     * Enum bug on IE.\n     * based on: http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation\n     */\n    function forOwn(obj, fn, thisObj){\n        forIn(obj, function(val, key){\n            if (hasOwn(obj, key)) {\n                return fn.call(thisObj, obj[key], key, obj);\n            }\n        });\n    }\n\n    module.exports = forOwn;\n\n\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mout/object/forOwn.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/mout/object/forOwn.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/mout/object/forOwn.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/mout/object/forOwn.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/mout/object/forOwn.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/mout/object/forOwn.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/mout/object/forOwn.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/mout/object/forOwn.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/mout/object/forOwn.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/mout/object/forOwn.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/mout/object/forOwn.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/mout/object/forOwn.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/mout/object/forOwn.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/mout/object/forOwn.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/mout/object/forOwn.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/mout/object/forOwn.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/mout/object/forOwn.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/mout/object/forOwn.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/mout/object/forOwn.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/mout/object/forOwn.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}}],"sources":{"node_modules/mout/object/forOwn.js":"var hasOwn = require('./hasOwn');\nvar forIn = require('./forIn');\n\n    /**\n     * Similar to Array/forEach but works over object properties and fixes Don't\n     * Enum bug on IE.\n     * based on: http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation\n     */\n    function forOwn(obj, fn, thisObj){\n        forIn(obj, function(val, key){\n            if (hasOwn(obj, key)) {\n                return fn.call(thisObj, obj[key], key, obj);\n            }\n        });\n    }\n\n    module.exports = forOwn;\n\n\n"},"lineCount":20}},"error":null,"hash":"11af2da92ae9019bfe48f74f40386305","cacheData":{"env":{}}}